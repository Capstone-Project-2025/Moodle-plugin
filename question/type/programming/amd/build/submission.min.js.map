{"version":3,"file":"submission.min.js","sources":["../src/submission.js"],"sourcesContent":["/* eslint-disable */\ndefine('qtype_programming/submission', ['jquery'], function($) {\n    return {\n        init: function(params) {\n            let attemptCount = 0;\n            const maxAttempts = 30;\n\n            const waitForElement = setInterval(function() {\n                attemptCount++;\n                const inputEl = document.getElementById(params.inputId);\n\n                if (inputEl) {\n                    clearInterval(waitForElement);\n\n                    const editor = window['codemirrorEditor_' + params.inputId] || {\n                        getValue: function() {\n                            return inputEl.value;\n                        }\n                    };\n\n                    // üîß Handle result display (used during polling)\n                    function handleSubmissionResult(res) {\n                        let explanation;\n                        switch (res.result) {\n                            case 'AC':\n                                explanation = \"<span style='color:green; font-weight:bold;'>‚úÖ Accepted</span>\"; break;\n                            case 'WA':\n                                explanation = \"<span style='color:red; font-weight:bold;'>‚ùå Wrong Answer</span>\"; break;\n                            case 'TLE':\n                                explanation = \"<span style='color:orange; font-weight:bold;'>‚è±Ô∏è Time Limit Exceeded</span>\"; break;\n                            case 'MLE':\n                                explanation = \"<span style='color:purple; font-weight:bold;'>üíæ Memory Limit Exceeded</span>\"; break;\n                            case 'RE':\n                                explanation = \"<span style='color:brown; font-weight:bold;'>üí• Runtime Error</span>\"; break;\n                            case 'CE':\n                                explanation = \"<span style='color:gray; font-weight:bold;'>‚öôÔ∏è Compilation Error</span>\"; break;\n                            default:\n                                explanation = \"<span style='color:red;'>‚ùå Unknown result: \" + (res.result || 'N/A') + \"</span>\";\n                        }\n\n                        resultDiv.append(\n                            '<br><strong>Language:</strong> ' + res.language +\n                            '<br><strong>Time:</strong> ' + (res.time ?? '-') +\n                            '<br><strong>Memory:</strong> ' + (res.memory ?? '-') +\n                            '<br>' + explanation\n                        );\n\n                        if (res.cases?.length > 0) {\n                            let caseDetails = '<br><br><strong>Test Cases:</strong><ul style=\"padding-left: 1.5em;\">';\n\n                            res.cases.forEach(c => {\n                                const symbol = c.status === 'AC' ? '‚úÖ' : '‚ùå';\n                                const points = (typeof c.points !== 'undefined' && typeof c.total !== 'undefined')\n                                    ? `${c.points} / ${c.total} points`\n                                    : 'no score';\n                                const time = c.time ?? '-';\n                                const memory = c.memory ?? '-';\n\n                                caseDetails += `\n                                    <li>\n                                        ${symbol} Case ${c.case_id}: ${points}\n                                        <span style=\"font-size: 90%; color: #666;\">\n                                            (Time: ${time}s, Mem: ${memory} KB)\n                                        </span>\n                                    </li>`;\n                            });\n\n                            caseDetails += '</ul>';\n\n                            const totalPoints = res.case_points ?? 0;\n                            const totalTotal = res.case_total ?? 0;\n\n                            resultDiv.append(`\n                                <br><strong>Total:</strong> ${totalPoints} / ${totalTotal} points\n                                ${caseDetails}\n                            `);\n                        }\n                    }\n\n                    // üîÅ Polling the submission result\n                    function pollSubmission(submissionId, tries = 0) {\n                        fetch(params.resultUrl, {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({ submission_id: submissionId })\n                        })\n                        .then(res => res.json())\n                        .then(res => {\n                            if (res.result === 'unknown' || res.status === 'P') {\n                                if (tries < 10) {\n                                    setTimeout(() => pollSubmission(submissionId, tries + 1), 3000);\n                                } else {\n                                    resultDiv.append('<br><span style=\"color:red;\">‚ùå Still no result after waiting</span>');\n                                }\n                            } else {\n                                handleSubmissionResult(res);\n                            }\n                        })\n                        .catch(err => {\n                            resultDiv.append('<br><span style=\"color:red;\">‚ùå Error polling: ' + err.message + '</span>');\n                        });\n                    }\n\n                    // ‚úÖ Submit the solution\n                    $('#' + params.submitButtonId).on('click', function() {\n                        if (editor && typeof editor.save === 'function') {\n                            editor.save(); // met √† jour le DOM\n                        }\n                        const code = inputEl.value; // contient le texte apr√®s .save()\n\n\n                        const languageId = parseInt($('#' + params.selectId).val(), 10);\n                        resultDiv = $('#' + params.resultContainerId);\n                        resultDiv.html('Submitting...');\n\n                        fetch(params.submitUrl, {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                code: code,\n                                problemcode: params.problemCode,\n                                language: languageId,\n                                sesskey: params.sesskey,\n                                questionid: params.questionId,\n                                attemptid: params.attemptid\n                            })\n                        })\n                        .then(response => response.json())\n                        .then(data => {\n                            if (data.submission_id) {\n                                resultDiv.html(\n                                    '<strong>Submission ID:</strong> ' + data.submission_id +\n                                    '<br>Checking result...'\n                                );\n\n                                const hiddenField = document.querySelector('input[name=\"' + params.submissionIdName + '\"]');\n                                if (hiddenField) {\n                                    hiddenField.value = data.submission_id;\n                                }\n\n                                const answerField = document.querySelector('textarea[name=\"' + params.inputname + '\"]');\n                                if (answerField) {\n                                    answerField.value = answerField.value.trim() + ' // submission #' + data.submission_id;\n                                }\n\n                                pollSubmission(data.submission_id);\n                            } else {\n                                throw new Error(data.error || 'Unknown error');\n                            }\n                        })\n                        .catch(function(err) {\n                            resultDiv.html('<span style=\"color:red;\">Submission failed: ' + err + '</span>');\n                        });\n                    });\n\n                    // ‚úÖ Show previous submissions\n                    $('#' + params.showSubmissionsButtonId).on('click', function() {\n                        const listDiv = $('#' + params.submissionListContainerId);\n                        listDiv.html('<span style=\"color:blue;\">‚è≥ Loading submissions...</span>');\n\n                        const url = new URL(params.submissionListUrl);\n                        url.searchParams.append('questionid', params.questionId);\n                        url.searchParams.append('sesskey', params.sesskey);\n                        url.searchParams.append('attemptid', params.attemptid);\n\n\n                        fetch(url.toString(), {\n                            method: 'GET',\n                            headers: { 'Accept': 'application/json' }\n                        })\n                        .then(res => res.json())\n                        .then(data => {\n                            if (!data.submissions || !Array.isArray(data.submissions)) {\n                                listDiv.html('<span style=\"color:red;\">‚ùå Failed to load submissions</span>');\n                                return;\n                            }\n\n                            if (data.submissions.length === 0) {\n                                listDiv.html('<span style=\"color:gray;\">No submissions yet.</span>');\n                                return;\n                            }\n\n                            let html = '<h4>Your Submissions</h4><ul style=\"padding-left:1.2em;\">';\n                            data.submissions.forEach(sub => {\n                                const safeSource = $('<div>').text(sub.source_code ?? '').html();\n                                html += `\n                                    <li style=\"margin-bottom: 1em;\">\n                                        <div>\n                                            <strong>Status:</strong> ${sub.status} |\n                                            <strong>Lang:</strong> ${sub.language ?? '-'} |\n                                            <strong>Time:</strong> ${sub.time ?? '-'} |\n                                            <strong>Memory:</strong> ${sub.memory ?? '-'}\n                                            <button type=\"button\" class=\"toggle-source\" data-id=\"${sub.submission_id}\">show code</button>\n                                        </div>\n                                        <pre id=\"source-${sub.submission_id}\" class=\"submission-source\" style=\"display:none;\">${safeSource}</pre>\n                                    </li>`;\n                            });\n                            html += '</ul>';\n                            listDiv.html(html);\n                        })\n                        .catch(err => {\n                            listDiv.html('<span style=\"color:red;\">‚ùå Error fetching submissions: ' + err.message + '</span>');\n                        });\n                    });\n\n                    // üîÅ Toggle to show/hide source code\n                    if (!window.toggleSourceInitialized) {\n                        $(document).on('click', '.toggle-source', function () {\n                            const id = $(this).data('id');\n                            const block = $('#source-' + id);\n                            block.slideToggle(200);\n\n                            const btn = $(this);\n                            btn.text(btn.text() === 'show code' ? 'Hide code' : 'show code');\n                        });\n                        window.toggleSourceInitialized = true;\n                    }\n\n                } else if (attemptCount >= maxAttempts) {\n                    clearInterval(waitForElement);\n                }\n            }, 200);\n        }\n    };\n});\n"],"names":["define","$","init","params","attemptCount","waitForElement","setInterval","inputEl","document","getElementById","inputId","handleSubmissionResult","res","explanation","result","resultDiv","append","language","time","memory","cases","length","caseDetails","forEach","c","symbol","status","points","total","case_id","totalPoints","case_points","totalTotal","case_total","pollSubmission","submissionId","tries","fetch","resultUrl","method","headers","body","JSON","stringify","submission_id","then","json","setTimeout","catch","err","message","clearInterval","editor","window","getValue","value","submitButtonId","on","save","code","languageId","parseInt","selectId","val","resultContainerId","html","submitUrl","problemcode","problemCode","sesskey","questionid","questionId","attemptid","response","data","Error","error","hiddenField","querySelector","submissionIdName","answerField","inputname","trim","showSubmissionsButtonId","listDiv","submissionListContainerId","url","URL","submissionListUrl","searchParams","toString","submissions","Array","isArray","sub","safeSource","text","source_code","toggleSourceInitialized","id","this","slideToggle","btn"],"mappings":"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"}