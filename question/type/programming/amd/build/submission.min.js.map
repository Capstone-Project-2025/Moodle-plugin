{"version":3,"file":"submission.min.js","sources":["../src/submission.js"],"sourcesContent":["/* eslint-disable */\r\ndefine('qtype_programming/submission', ['jquery'], function($) {\r\n    return {\r\n        init: function(params) {\r\n            let attemptCount = 0;\r\n            const maxAttempts = 30;\r\n\r\n            const waitForElement = setInterval(function() {\r\n                attemptCount++;\r\n                const inputEl = document.getElementById(params.inputId);\r\n\r\n                if (inputEl) {\r\n                    clearInterval(waitForElement);\r\n\r\n                    const editor = window['codemirrorEditor_' + params.slot] || {\r\n                        getValue: function() {\r\n                            return inputEl.value;\r\n                        }\r\n                    };\r\n\r\n                    // üîß Handle result display (used during polling)\r\n                    function handleSubmissionResult(res) {\r\n                        let explanation;\r\n                        switch (res.result) {\r\n                            case 'AC':\r\n                                explanation = \"<span style='color:green; font-weight:bold;'>‚úÖ Accepted</span>\"; break;\r\n                            case 'WA':\r\n                                explanation = \"<span style='color:red; font-weight:bold;'>‚ùå Wrong Answer</span>\"; break;\r\n                            case 'TLE':\r\n                                explanation = \"<span style='color:orange; font-weight:bold;'>‚è±Ô∏è Time Limit Exceeded</span>\"; break;\r\n                            case 'MLE':\r\n                                explanation = \"<span style='color:purple; font-weight:bold;'>üíæ Memory Limit Exceeded</span>\"; break;\r\n                            case 'RE':\r\n                                explanation = \"<span style='color:brown; font-weight:bold;'>üí• Runtime Error</span>\"; break;\r\n                            case 'CE':\r\n                                explanation = \"<span style='color:gray; font-weight:bold;'>‚öôÔ∏è Compilation Error</span>\"; break;\r\n                            default:\r\n                                explanation = \"<span style='color:red;'>‚ùå Unknown result: \" + (res.result || 'N/A') + \"</span>\";\r\n                        }\r\n\r\n                        resultDiv.append(\r\n                            '<br><strong>Language:</strong> ' + res.language +\r\n                            '<br><strong>Time:</strong> ' + (res.time ?? '-') +\r\n                            '<br><strong>Memory:</strong> ' + (res.memory ?? '-') +\r\n                            '<br>' + explanation\r\n                        );\r\n\r\n                        if (res.cases?.length > 0) {\r\n                            let caseDetails = '<br><br><strong>Test Cases:</strong><ul style=\"padding-left: 1.5em;\">';\r\n\r\n                            res.cases.forEach(c => {\r\n                                const symbol = c.status === 'AC' ? '‚úÖ' : '‚ùå';\r\n                                const points = (typeof c.points !== 'undefined' && typeof c.total !== 'undefined')\r\n                                    ? `${c.points} / ${c.total} points`\r\n                                    : 'no score';\r\n                                const time = c.time ?? '-';\r\n                                const memory = c.memory ?? '-';\r\n\r\n                                caseDetails += `\r\n                                    <li>\r\n                                        ${symbol} Case ${c.case_id}: ${points}\r\n                                        <span style=\"font-size: 90%; color: #666;\">\r\n                                            (Time: ${time}s, Mem: ${memory} KB)\r\n                                        </span>\r\n                                    </li>`;\r\n                            });\r\n\r\n                            caseDetails += '</ul>';\r\n\r\n                            const totalPoints = res.case_points ?? 0;\r\n                            const totalTotal = res.case_total ?? 0;\r\n\r\n                            resultDiv.append(`\r\n                                <br><strong>Total:</strong> ${totalPoints} / ${totalTotal} points\r\n                                ${caseDetails}\r\n                            `);\r\n                        }\r\n                    }\r\n\r\n                    // üîÅ Polling the submission result\r\n                    function pollSubmission(submissionId, tries = 0) {\r\n                        fetch(params.resultUrl, {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ submission_id: submissionId })\r\n                        })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            if (res.result === 'unknown' || res.status === 'P') {\r\n                                if (tries < 10) {\r\n                                    setTimeout(() => pollSubmission(submissionId, tries + 1), 3000);\r\n                                } else {\r\n                                    resultDiv.append('<br><span style=\"color:red;\">‚ùå Still no result after waiting</span>');\r\n                                }\r\n                            } else {\r\n                                handleSubmissionResult(res);\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            resultDiv.append('<br><span style=\"color:red;\">‚ùå Error polling: ' + err.message + '</span>');\r\n                        });\r\n                    }\r\n\r\n                    // ‚úÖ Submit the solution\r\n                    $('#' + params.submitButtonId).on('click', function() {\r\n                        const code = editor.getValue();\r\n                        const languageId = parseInt($('#' + params.selectId).val(), 10);\r\n                        resultDiv = $('#' + params.resultContainerId);\r\n                        resultDiv.html('Submitting...');\r\n\r\n                        fetch(params.submitUrl, {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({\r\n                                code: code,\r\n                                problemcode: params.problemCode,\r\n                                language: languageId,\r\n                                sesskey: params.sesskey,\r\n                                questionid: params.questionId,\r\n                                attemptid: params.attemptid\r\n                            })\r\n                        })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            if (data.submission_id) {\r\n                                resultDiv.html(\r\n                                    '<strong>Submission ID:</strong> ' + data.submission_id +\r\n                                    '<br>Checking result...'\r\n                                );\r\n\r\n                                const hiddenField = document.querySelector('input[name=\"' + params.submissionIdName + '\"]');\r\n                                if (hiddenField) {\r\n                                    hiddenField.value = data.submission_id;\r\n                                }\r\n\r\n                                const answerField = document.querySelector('textarea[name=\"' + params.inputname + '\"]');\r\n                                if (answerField) {\r\n                                    answerField.value = answerField.value.trim() + ' // submission #' + data.submission_id;\r\n                                }\r\n\r\n                                pollSubmission(data.submission_id);\r\n                            } else {\r\n                                throw new Error(data.error || 'Unknown error');\r\n                            }\r\n                        })\r\n                        .catch(function(err) {\r\n                            resultDiv.html('<span style=\"color:red;\">Submission failed: ' + err + '</span>');\r\n                        });\r\n                    });\r\n\r\n                    // ‚úÖ Show previous submissions\r\n                    $('#' + params.showSubmissionsButtonId).on('click', function() {\r\n                        const listDiv = $('#' + params.submissionListContainerId);\r\n                        listDiv.html('<span style=\"color:blue;\">‚è≥ Loading submissions...</span>');\r\n\r\n                        const url = new URL(params.submissionListUrl);\r\n                        url.searchParams.append('questionid', params.questionId);\r\n                        url.searchParams.append('sesskey', params.sesskey);\r\n\r\n                        fetch(url.toString(), {\r\n                            method: 'GET',\r\n                            headers: { 'Accept': 'application/json' }\r\n                        })\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            if (!data.submissions || !Array.isArray(data.submissions)) {\r\n                                listDiv.html('<span style=\"color:red;\">‚ùå Failed to load submissions</span>');\r\n                                return;\r\n                            }\r\n\r\n                            if (data.submissions.length === 0) {\r\n                                listDiv.html('<span style=\"color:gray;\">No submissions yet.</span>');\r\n                                return;\r\n                            }\r\n\r\n                            let html = '<h4>Your Submissions</h4><ul style=\"padding-left:1.2em;\">';\r\n                            data.submissions.forEach(sub => {\r\n                                const safeSource = $('<div>').text(sub.source_code ?? '').html();\r\n                                html += `\r\n                                    <li style=\"margin-bottom: 1em;\">\r\n                                        <div>\r\n                                            <strong>ID:</strong> ${sub.submission_id} |\r\n                                            <strong>Status:</strong> ${sub.status} |\r\n                                            <strong>Lang:</strong> ${sub.language ?? '-'} |\r\n                                            <strong>Time:</strong> ${sub.time ?? '-'} |\r\n                                            <strong>Memory:</strong> ${sub.memory ?? '-'}\r\n                                            <button type=\"button\" class=\"toggle-source\" data-id=\"${sub.submission_id}\">show code</button>\r\n                                        </div>\r\n                                        <pre id=\"source-${sub.submission_id}\" class=\"submission-source\" style=\"display:none;\">${safeSource}</pre>\r\n                                    </li>`;\r\n                            });\r\n                            html += '</ul>';\r\n                            listDiv.html(html);\r\n                        })\r\n                        .catch(err => {\r\n                            listDiv.html('<span style=\"color:red;\">‚ùå Error fetching submissions: ' + err.message + '</span>');\r\n                        });\r\n                    });\r\n\r\n                    // üîÅ Toggle to show/hide source code\r\n                    if (!window.toggleSourceInitialized) {\r\n                        $(document).on('click', '.toggle-source', function () {\r\n                            const id = $(this).data('id');\r\n                            const block = $('#source-' + id);\r\n                            block.slideToggle(200);\r\n\r\n                            const btn = $(this);\r\n                            btn.text(btn.text() === 'show code' ? 'Hide code' : 'show code');\r\n                        });\r\n                        window.toggleSourceInitialized = true;\r\n                    }\r\n\r\n                } else if (attemptCount >= maxAttempts) {\r\n                    clearInterval(waitForElement);\r\n                }\r\n            }, 200);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","init","params","attemptCount","waitForElement","setInterval","inputEl","document","getElementById","inputId","clearInterval","editor","window","slot","getValue","value","handleSubmissionResult","res","explanation","result","resultDiv","append","language","time","memory","cases","length","caseDetails","forEach","c","symbol","status","points","total","case_id","totalPoints","case_points","totalTotal","case_total","pollSubmission","submissionId","tries","fetch","resultUrl","method","headers","body","JSON","stringify","submission_id","then","json","setTimeout","catch","err","message","submitButtonId","on","code","languageId","parseInt","selectId","val","resultContainerId","html","submitUrl","problemcode","problemCode","sesskey","questionid","questionId","attemptid","response","data","Error","error","hiddenField","querySelector","submissionIdName","answerField","inputname","trim","showSubmissionsButtonId","listDiv","submissionListContainerId","url","URL","submissionListUrl","searchParams","toString","submissions","Array","isArray","sub","safeSource","text","source_code","toggleSourceInitialized","id","this","slideToggle","btn"],"mappings":"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"}