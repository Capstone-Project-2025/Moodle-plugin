define("qtype_programming/submission",["jquery"],(function($){return{init:function(params){let attemptCount=0;const waitForElement=setInterval((function(){attemptCount++;const inputEl=document.getElementById(params.inputId);if(inputEl){clearInterval(waitForElement);const editor=window["codemirrorEditor_"+params.slot]||{getValue:function(){return inputEl.value}};function handleSubmissionResult(res){var _res$cases;let explanation;switch(res.result){case"AC":explanation="<span style='color:green; font-weight:bold;'>‚úÖ Accepted</span>";break;case"WA":explanation="<span style='color:red; font-weight:bold;'>‚ùå Wrong Answer</span>";break;case"TLE":explanation="<span style='color:orange; font-weight:bold;'>‚è±Ô∏è Time Limit Exceeded</span>";break;case"MLE":explanation="<span style='color:purple; font-weight:bold;'>üíæ Memory Limit Exceeded</span>";break;case"RE":explanation="<span style='color:brown; font-weight:bold;'>üí• Runtime Error</span>";break;case"CE":explanation="<span style='color:gray; font-weight:bold;'>‚öôÔ∏è Compilation Error</span>";break;default:explanation="<span style='color:red;'>‚ùå Unknown result: "+(res.result||"N/A")+"</span>"}if(resultDiv.append("<br><strong>Language:</strong> "+res.language+"<br><strong>Time:</strong> "+(res.time??"-")+"<br><strong>Memory:</strong> "+(res.memory??"-")+"<br>"+explanation),(null===(_res$cases=res.cases)||void 0===_res$cases?void 0:_res$cases.length)>0){let caseDetails='<br><br><strong>Test Cases:</strong><ul style="padding-left: 1.5em;">';res.cases.forEach((c=>{const symbol="AC"===c.status?"‚úÖ":"‚ùå",points=void 0!==c.points&&void 0!==c.total?`${c.points} / ${c.total} points`:"no score",time=c.time??"-",memory=c.memory??"-";caseDetails+=`\n                                    <li>\n                                        ${symbol} Case ${c.case_id}: ${points}\n                                        <span style="font-size: 90%; color: #666;">\n                                            (Time: ${time}s, Mem: ${memory} KB)\n                                        </span>\n                                    </li>`})),caseDetails+="</ul>";const totalPoints=res.case_points??0,totalTotal=res.case_total??0;resultDiv.append(`\n                                <br><strong>Total:</strong> ${totalPoints} / ${totalTotal} points\n                                ${caseDetails}\n                            `)}}function pollSubmission(submissionId){let tries=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;fetch(params.resultUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({submission_id:submissionId})}).then((res=>res.json())).then((res=>{"unknown"===res.result||"P"===res.status?tries<10?setTimeout((()=>pollSubmission(submissionId,tries+1)),3e3):resultDiv.append('<br><span style="color:red;">‚ùå Still no result after waiting</span>'):handleSubmissionResult(res)})).catch((err=>{resultDiv.append('<br><span style="color:red;">‚ùå Error polling: '+err.message+"</span>")}))}$("#"+params.submitButtonId).on("click",(function(){const code=editor.getValue(),languageId=parseInt($("#"+params.selectId).val(),10);resultDiv=$("#"+params.resultContainerId),resultDiv.html("Submitting..."),fetch(params.submitUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:code,problemcode:params.problemCode,language:languageId,sesskey:params.sesskey,questionid:params.questionId,attemptid:params.attemptid})}).then((response=>response.json())).then((data=>{if(!data.submission_id)throw new Error(data.error||"Unknown error");{resultDiv.html("<strong>Submission ID:</strong> "+data.submission_id+"<br>Checking result...");const hiddenField=document.querySelector('input[name="'+params.submissionIdName+'"]');hiddenField&&(hiddenField.value=data.submission_id);const answerField=document.querySelector('textarea[name="'+params.inputname+'"]');answerField&&(answerField.value=answerField.value.trim()+" // submission #"+data.submission_id),pollSubmission(data.submission_id)}})).catch((function(err){resultDiv.html('<span style="color:red;">Submission failed: '+err+"</span>")}))})),$("#"+params.showSubmissionsButtonId).on("click",(function(){const listDiv=$("#"+params.submissionListContainerId);listDiv.html('<span style="color:blue;">‚è≥ Loading submissions...</span>');const url=new URL(params.submissionListUrl);url.searchParams.append("questionid",params.questionId),url.searchParams.append("sesskey",params.sesskey),fetch(url.toString(),{method:"GET",headers:{Accept:"application/json"}}).then((res=>res.json())).then((data=>{if(!data.submissions||!Array.isArray(data.submissions))return void listDiv.html('<span style="color:red;">‚ùå Failed to load submissions</span>');if(0===data.submissions.length)return void listDiv.html('<span style="color:gray;">No submissions yet.</span>');let html='<h4>Your Submissions</h4><ul style="padding-left:1.2em;">';data.submissions.forEach((sub=>{const safeSource=$("<div>").text(sub.source_code??"").html();html+=`\n                                    <li style="margin-bottom: 1em;">\n                                        <div>\n                                            <strong>ID:</strong> ${sub.submission_id} |\n                                            <strong>Status:</strong> ${sub.status} |\n                                            <strong>Lang:</strong> ${sub.language??"-"} |\n                                            <strong>Time:</strong> ${sub.time??"-"} |\n                                            <strong>Memory:</strong> ${sub.memory??"-"}\n                                            <button type="button" class="toggle-source" data-id="${sub.submission_id}">show code</button>\n                                        </div>\n                                        <pre id="source-${sub.submission_id}" class="submission-source" style="display:none;">${safeSource}</pre>\n                                    </li>`})),html+="</ul>",listDiv.html(html)})).catch((err=>{listDiv.html('<span style="color:red;">‚ùå Error fetching submissions: '+err.message+"</span>")}))})),window.toggleSourceInitialized||($(document).on("click",".toggle-source",(function(){const id=$(this).data("id");$("#source-"+id).slideToggle(200);const btn=$(this);btn.text("show code"===btn.text()?"Hide code":"show code")})),window.toggleSourceInitialized=!0)}else attemptCount>=30&&clearInterval(waitForElement)}),200)}}}));

//# sourceMappingURL=submission.min.js.map