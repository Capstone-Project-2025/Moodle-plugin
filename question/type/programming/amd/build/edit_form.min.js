define("qtype_programming/edit_form",["core/ajax","core/str","core/config"],(function(Ajax,Str,Config){return{init:function(){document.addEventListener("DOMContentLoaded",(function(){const select=document.querySelector('[name="problemlist"]'),nameField=document.querySelector('[name="name"]'),codeField=document.querySelector('[name="problemcode"]'),nameFieldWrapper=document.querySelector('[id^="fitem_id_name"]'),problemIdField=document.querySelector('[name="problemid"]'),editorId="id_questiontext";nameFieldWrapper&&(nameFieldWrapper.style.display="none"),fetch(Config.wwwroot+"/question/type/programming/fetchproblems.php").then((response=>response.json())).then((data=>{data.forEach((problem=>{const option=document.createElement("option");option.value=problem.code,option.textContent=problem.name,select.appendChild(option)}))})),select.addEventListener("change",(function(){const code=this.value;codeField.value=code,fetch(Config.wwwroot+"/question/type/programming/fetchproblem.php?code="+encodeURIComponent(code)).then((response=>response.json())).then((data=>{nameField&&(nameField.value=data.name||""),codeField&&(codeField.value=data.code||""),problemIdField&&(problemIdField.value=data.id||"");const description=data.description||"";"undefined"!=typeof tinyMCE&&tinyMCE.get(editorId)&&tinyMCE.get(editorId).setContent(description),"undefined"!=typeof Y&&Y.one("#"+editorId+"_editable")&&Y.one("#"+editorId+"_editable").setHTML(description);const rawTextarea=document.getElementById(editorId);rawTextarea&&(rawTextarea.value=description)}))}))}))}}}));

//# sourceMappingURL=edit_form.min.js.map