This files describes API changes for progcontest report plugins.

Overview of this plugin type at http://docs.moodle.org/dev/progcontest_reports

=== 3.9 ===

* Programmingcontest report plugins defining capabilities used to require an extra string like
    $string['statistics:componentname'] = 'Programmingcontest statistics report';
in addition to
    $string['pluginname'] = 'Statistics';
This is no longer required.

=== 3.8 ===

* New progcontest_attempts_report_table method: \progcontest_attempts_report_table::checkbox_col_header()
  This generates a column header containing a checkbox that toggles the checked state of all the checkboxes corresponding to the
  entries listed on a given progcontest report table. It requires the name of the checkbox column as a parameter in order to disable
  sorting on the checkbox column.

=== 3.2 ===

* A code refactoring based on new sql functions in MDL-31243 and removing
get_users_by_capability from the progcontest reports in MDL-27072. The class
progcontest_attempts_report is now initialised to return \core\dml\sql_join (joins,
wheres, params) rather than arrays of userids. This allows the use of joins
in progcontest report queries and is very important when there
are larger numbers of enrolled users. The signature of many progcontest report
methods now includes '$studentsjoins', rather than '$students' and similar
for '$groupstudentsjoins', '$allowedjoins' and '$usersjoins'. For clear
examples of the use of these changes please see attemptsreport_table.php
base_sql() or almost any function in overview/report.php. The protected
function progcontest_attempts_report::load_relevant_students is deprecated,
please use progcontest_attempts_report::get_students_joins() instead.

=== 2.6 ===

* Improving the display page and heading levels to have a proper nesting.
We are reducing the amount of white spaces for the top report by making
'separate group' options and attempts to be displayed inline.
In grading report, we are changing 'no questions' from using heading to
notification message. (MDL-41615)

=== 2.3 ===

* Support for the old way of doing cron in a separate cron.php file has been removed.
Instead, you need a lib.php file inside the plugin with a cron function
called progcontest_myreportname_cron(). The statistics report is an example of how
it should be done.

* There was a big refactor of the progcontest reports, in issues MDL-32300, MDL-32322 and MDL-3030.
It is difficult to explain the changes. Probably the best way to understand what
happened is to look at
    git log mod/progcontest/report/overview
    git log mod/progcontest/report/responses
and so on. Here are some notes on a few of the changes:

The class progcontest_attempt_report was renamed to progcontest_attempts_report (with an extra s).

Some globally defined constants with the prefix progcontest_REPORT_ATTEMPTS_ moved into
the progcontest_attempts_report class. Specifically

progcontest_attempts_report::ALL_WITH         replaces progcontest_REPORT_ATTEMPTS_ALL
progcontest_attempts_report::ENROLLED_ALL     replaces progcontest_REPORT_ATTEMPTS_ALL_STUDENTS
progcontest_attempts_report::ENROLLED_WITH    replaces progcontest_REPORT_ATTEMPTS_STUDENTS_WITH
progcontest_attempts_report::ENROLLED_WITHOUT replaces progcontest_REPORT_ATTEMPTS_STUDENTS_WITH_NO

Your if you have a table class, it needs to be renamed like
progcontest_report_myreportname_table -> progcontest_myreportname_table. That is, all the
class names in your plugin should start with the frankenstyle plugin name
progcontest_myreportname.


=== 2.2 ===

* Plugins should be converted to implement cron in the standard way. In lib.php,
define a
function progcontest_myreportname_cron() {};
This replaces the old way of having a separate cron.php file. Also, the cron
frequency should be defined in version.php, not in the progcontest_reports table.


=== earlier versions ===

* ... API changes were not documented properly. Sorry. (There weren't many!)
